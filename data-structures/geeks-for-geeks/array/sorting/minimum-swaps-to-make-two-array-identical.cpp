// https://www.geeksforgeeks.org/minimum-swaps-to-make-two-array-identical/

#include<bits/stdc++.h>

using namespace std;

// time: O(n), memory: O(n)
int main() {
    int arr_1[] = {62, 118, 183, 156, 133, 115, 171, 22, 192, 34, 2, 191, 24, 92, 123, 38, 26, 55, 23, 160, 74, 159, 49, 29, 35, 119, 137, 75, 14, 33, 158, 168, 127, 47, 63, 167, 101, 164, 177, 188, 70, 157, 129, 163, 182, 146, 41, 28, 155, 179, 131, 141, 135, 58, 81, 132, 72, 99, 43, 17, 170, 93, 145, 48, 151, 77, 88, 3, 84, 152, 110, 44, 90, 40, 53, 31, 113, 144, 11, 36, 120, 5, 86, 114, 162, 117, 97, 27, 78, 104, 122, 172, 79, 165, 85, 98, 143, 112, 185, 59, 91, 105, 1, 108, 103, 4, 52, 45, 147, 184, 39, 21, 13, 15, 68, 180, 46, 194, 142, 176, 178, 10, 20, 197, 37, 64, 12, 150, 111, 102, 187, 130, 25, 149, 94, 181, 50, 51, 82, 54, 42, 106, 83, 175, 173, 195, 16, 96, 9, 7, 71, 126, 61, 57, 198, 148, 128, 89, 95, 32, 18, 153, 100, 6, 121, 66, 65, 196, 134, 87, 200, 193, 80, 19, 199, 190, 73, 161, 125, 138, 109, 136, 169, 189, 67, 8, 139, 107, 30, 166, 69, 186, 124, 76, 56, 60, 174, 116, 154, 140};
    // int arr_2[] = {124, 81, 165, 172, 51, 189, 72, 102, 126, 193, 40, 65, 73, 41, 183, 107, 135, 147, 112, 163, 137, 27, 141, 52, 9, 77, 97, 182, 63, 106, 199, 149, 48, 1, 47, 158, 56, 79, 64, 121, 104, 146, 155, 175, 82, 6, 120, 90, 113, 115, 181, 11, 25, 23, 42, 171, 30, 103, 139, 168, 187, 74, 99, 160, 133, 21, 152, 35, 78, 144, 49, 197, 125, 57, 26, 18, 88, 159, 198, 36, 128, 136, 118, 177, 10, 151, 14, 142, 12, 148, 96, 46, 140, 108, 44, 87, 105, 196, 185, 7, 145, 138, 179, 17, 161, 5, 28, 22, 58, 194, 162, 129, 70, 80, 94, 75, 100, 66, 67, 68, 98, 157, 50, 89, 54, 37, 32, 15, 84, 134, 62, 8, 170, 43, 127, 186, 4, 109, 39, 20, 53, 132, 130, 3, 191, 169, 83, 59, 154, 111, 93, 45, 110, 55, 114, 117, 195, 71, 164, 34, 143, 24, 190, 69, 29, 192, 153, 101, 91, 156, 122, 184, 85, 61, 19, 60, 76, 180, 131, 2, 174, 123, 116, 13, 167, 92, 119, 178, 95, 188, 16, 33, 150, 176, 38, 173, 86, 166, 31, 200};
    int arr_2[] = {43, 31, 15, 121, 72, 144, 172, 70, 99, 47, 76, 38, 189, 160, 97, 19, 129, 142, 164, 6, 13, 53, 136, 108, 120, 68, 65, 177, 182, 14, 135, 143, 131, 118, 165, 82, 150, 8, 98, 85, 180, 73, 166, 109, 187, 148, 16, 193, 12, 138, 29, 46, 181, 93, 30, 119, 111, 87, 61, 90, 83, 9, 175, 134, 41, 163, 80, 183, 186, 74, 17, 170, 56, 192, 23, 92, 176, 161, 7, 141, 128, 106, 124, 179, 78, 54, 173, 126, 103, 127, 178, 3, 130, 67, 139, 125, 174, 140, 102, 81, 32, 18, 40, 63, 101, 28, 167, 62, 22, 113, 48, 156, 66, 5, 122, 51, 44, 42, 96, 10, 149, 171, 169, 116, 21, 114, 75, 34, 196, 95, 11, 168, 69, 132, 26, 20, 86, 25, 152, 158, 55, 133, 27, 45, 71, 77, 104, 50, 197, 52, 137, 190, 89, 35, 79, 151, 60, 33, 110, 36, 188, 198, 91, 162, 157, 64, 123, 100, 59, 146, 57, 88, 105, 194, 39, 155, 94, 84, 107, 195, 2, 117, 147, 1, 4, 153, 24, 112, 191, 200, 185, 199, 49, 159, 115, 145, 154, 58, 37, 184};
    int n = sizeof(arr_1) / sizeof(arr_1[0]);
    unordered_map<int, int> m;
    int i = 0;
    while(i < n) {
        m[arr_2[i]] = i;
        i++;
    }
    int swaps = 0;
    i = 0;
    while(i < n) {
        if (arr_2[i] != arr_1[i]) {
            int idx = m[arr_1[i]];
            arr_2[idx] = arr_2[i];
            m[arr_2[i]] = idx;
            arr_2[i] = arr_1[i];
            m[arr_1[i]] = i;
            swaps++;
        }
        i++;
    }
    cout << swaps << endl;

    return 0;
}
